{"ast":null,"code":"var _jsxFileName = \"/home/student/Documents/team550_project/CollegeSearchPortal/app/client/src/components/Top10Lists.js\";\nimport React from 'react';\nimport '../style/Top10Lists.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //import PageNavbar from './PageNavbar';\n\nimport CollegeListRow from './CollegeListRow';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Media from 'react-bootstrap/Media';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nexport default class Top10Lists extends React.Component {\n  constructor(props) {\n    super(props); // State maintained by this React component\n\n    this.state = {\n      //variables here \n      institution: 100654,\n      majors: [],\n      movieName: \"\",\n      colleges: [],\n      regions: [],\n      urbanizations: [],\n      selectedControl: \"NULL\",\n      selectedSize: \"NULL\",\n      selectedLevel: \"NULL\",\n      selectedDegUrban: \"NULL\",\n      selectedRegion: \"NULL\",\n      selectedTutionType: \"In state\",\n      selectedLevelOfStudy: \"Undergraduate\",\n      sortOrder: \"DESC\"\n    };\n    this.showTop10ByAcceptanceRate = this.showTop10ByAcceptanceRate.bind(this);\n    this.showTop10ByTutionCost = this.showTop10ByTutionCost.bind(this);\n    this.showTop10ByEarnings = this.showTop10ByEarnings.bind(this);\n    this.showTop10ByJobs = this.showTop10ByJobs.bind(this);\n    this.handleRegionFilterChange = this.handleRegionFilterChange.bind(this);\n    this.handleControlFilterChange = this.handleControlFilterChange.bind(this);\n    this.handleSizeFilterChange = this.handleSizeFilterChange.bind(this);\n    this.handleLevelFilterChange = this.handleLevelFilterChange.bind(this);\n    this.handleDegUrbanFilterChange = this.handleDegUrbanFilterChange.bind(this);\n  } // handle change of region dropdown filter\n\n\n  handleRegionFilterChange(e) {\n    this.setState({\n      selectedRegion: e.target.value\n    });\n  }\n\n  handleDegUrbanFilterChange(e) {\n    this.setState({\n      selectedDegUrban: e.target.value\n    });\n  }\n\n  handleControlFilterChange(e) {\n    this.setState({\n      selectedControl: e.target.value\n    });\n    console.log(\"selectedControl: \" + this.selectedControl);\n  }\n\n  handleSizeFilterChange(e) {\n    this.setState({\n      selectedSize: e.target.value\n    });\n  }\n\n  handleLevelFilterChange(e) {\n    this.setState({\n      selectedLevel: e.target.value\n    });\n  }\n\n  componentDidMount() {\n    // Send an HTTP request to the server.\n    fetch(\"http://localhost:8081/regions\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(regionList => {\n      if (!regionList) return;\n      console.log(regionList); // Map each decade in decadesList to an dropdown element:\n\n      let regionDivs = regionList.map((regionObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: regionObj.region,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 6\n        }\n      }, \" \", regionObj.region, \" \")); // Set the state of the decade list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        regions: regionDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }); // Send an HTTP request to the server.\n\n    fetch(\"http://localhost:8081/urbanization\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(urbanList => {\n      if (!urbanList) return;\n      console.log(urbanList); // Map each decade in decadesList to an dropdown element:\n\n      let urbanDivs = urbanList.map((urbanObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: urbanObj.degree_urbanization,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 6\n        }\n      }, \" \", urbanObj.degree_urbanization, \" \")); // Set the state of the decade list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        urbanizations: urbanDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showTop10ByTutionCost() {\n    // Send an HTTP request to the server.\n    fetch(`http://localhost:8081/top10/tution/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedLevel}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.sortOrder}`, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(collegeList => {\n      if (!collegeList) return; // Map each attribute of a movie in this.state.movies to an HTML element\n\n      let collegeDivs = collegeList.map((college, i) => /*#__PURE__*/React.createElement(CollegeListRow, {\n        name: college.InstitutionName,\n        id: college.InstitutionID,\n        location: college.location,\n        url_school: college.url_school,\n        data_year: college.year,\n        attribute1Label: \"Acceptance Rate\",\n        attribute1Value: college.acceptance_rate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 6\n        }\n      })); // Set the state of the movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        colleges: collegeDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showTop10ByEarnings() {\n    // Send an HTTP request to the server.\n    fetch(`http://localhost:8081/top10/earning/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedLevel}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.sortOrder}`, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(collegeList => {\n      if (!collegeList) return; // Map each attribute of a movie in this.state.movies to an HTML element\n\n      let collegeDivs = collegeList.map((college, i) => /*#__PURE__*/React.createElement(CollegeListRow, {\n        name: college.InstitutionName,\n        id: college.InstitutionID,\n        location: college.location,\n        url_school: college.url_school,\n        data_year: college.year,\n        attribute1Label: \"Acceptance Rate\",\n        attribute1Value: college.acceptance_rate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 6\n        }\n      })); // Set the state of the movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        colleges: collegeDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showTop10ByAcceptanceRate() {\n    // Send an HTTP request to the server.\n    fetch(`http://localhost:8081/top10/acceptance/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedLevel}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.sortOrder}`, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(collegeList => {\n      if (!collegeList) return; // Map each attribute of a movie in this.state.movies to an HTML element\n\n      let collegeDivs = collegeList.map((college, i) => /*#__PURE__*/React.createElement(CollegeListRow, {\n        name: college.InstitutionName,\n        id: college.InstitutionID,\n        location: college.location,\n        url_school: college.url_school,\n        data_year: college.year,\n        attribute1Label: \"Acceptance Rate\",\n        attribute1Value: college.acceptance_rate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 6\n        }\n      })); // Set the state of the movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        colleges: collegeDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showTop10ByJobs() {\n    console.log(\"Top 10 Jobs\");\n  } //Need a render function. I'm copying sample method from HW2 if you need inspiration/structure\n  // // {this.state.colleges}\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Top10Lists\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      class: \"d-flex flex-wrap align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 7\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: 119,\n      height: 100,\n      className: \"mr-3\",\n      src: \"LogosTop10.jpg\",\n      alt: \"Top 10 Colleges\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }\n    }, \"TOP 10 Colleges\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sed arcu non odio euismod lacinia at. Mauris sit amet massa vitae tortor condimentum. Nisi vitae suscipit tellus mauris a diam maecenas sed enim. Sed augue lacus viverra vitae congue eu consequat ac felis.\")))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 7\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"option-btn-img\",\n      src: \"./accepted.png\",\n      alt: \"Top 10 Colleges by Acceptance Rate\",\n      onClick: this.showTop10ByAcceptanceRate.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 8\n      }\n    }), \"Top 10 Colleges by Acceptance Rate\"), ' '), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"option-btn-img\",\n      src: \"./cost.png\",\n      alt: \"Top 10 Colleges by Tution Fee\",\n      onClick: this.showTop10ByTutionCost.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 8\n      }\n    }), \"Tution Fee\"), ' '), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"option-btn-img\",\n      src: \"./salary.png\",\n      alt: \"Top 10 Colleges by Earnings\",\n      onClick: this.showTop10ByEarnings.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 8\n      }\n    }), \"Earnings\"), ' '), /*#__PURE__*/React.createElement(Col, {\n      xs: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 7\n      }\n    }, \" \", /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      class: \"option-btn-img\",\n      src: \"./jobs.png\",\n      alt: \"Top 10 Colleges by Job Specialization\",\n      onClick: this.showTop10ByJobs.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 8\n      }\n    }), \"Top 10 Colleges by Job Specialization\"), ' '), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 7\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Accordion, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n      as: Card.Header,\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 10\n      }\n    }, \"FILTER YOUR RESULTS\"), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n      eventKey: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"filterControl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 15\n      }\n    }, \"Control of Institution\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"controlFilter\",\n      value: this.state.selectedControl,\n      onChange: this.handleControlFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 16\n      }\n    }, \" Public \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Private not-for-profit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 16\n      }\n    }, \" Private not-for-profit \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Private for-profit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 16\n      }\n    }, \" Private for-profit \"))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"filterSize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 15\n      }\n    }, \"Institution Size\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"sizeFilter\",\n      value: this.state.selectedSize,\n      onChange: this.handleSizeFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Under 1,000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 16\n      }\n    }, \" Under 1,000 \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1,000\\u20134,999\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 16\n      }\n    }, \" 1,000\\u20134,999 \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5,000\\u20139,999\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 16\n      }\n    }, \" 5,000\\u20139,999 \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10,000\\u201319,999\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 16\n      }\n    }, \" 10,000\\u201319,999 \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"20,000 and above\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 16\n      }\n    }, \" 20,000 and above \"))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"filterLevel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 15\n      }\n    }, \"Institution Level\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"controlSize\",\n      value: this.state.selectedLevel,\n      onChange: this.handleLevelFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Less than two years (below associate's)\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 16\n      }\n    }, \" Less than two years (below associate's) \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"At least two but less than four years\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 16\n      }\n    }, \" At least two but less than four years \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Four or more years\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 16\n      }\n    }, \" Four or more years \")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"filterRegion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 15\n      }\n    }, \"Region\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"regionFilter\",\n      value: this.state.selectedRegion,\n      onChange: this.handleRegionFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 15\n      }\n    }, this.state.regions)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"6\",\n      controlId: \"filterDegUrban\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 15\n      }\n    }, \"Degree of Urbanization\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      multiple: true,\n      name: \"degUrbanFilter\",\n      value: this.state.selectedDegUrban,\n      onChange: this.handleDegUrbanFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 15\n      }\n    }, this.state.urbanizations))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"2\",\n      controlId: \"filterDegUrban\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 15\n      }\n    }, \"Filter Results\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"1\",\n      controlId: \"filterDegUrban\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 15\n      }\n    }, \"Clear\"))))))), /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 9\n      }\n    }, \" \"))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 7\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 7\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 7\n      }\n    }, this.state.colleges), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 7\n      }\n    }, \" \"))));\n  }\n\n}","map":{"version":3,"sources":["/home/student/Documents/team550_project/CollegeSearchPortal/app/client/src/components/Top10Lists.js"],"names":["React","CollegeListRow","Container","Row","Media","Col","Button","Accordion","Card","Form","Jumbotron","Top10Lists","Component","constructor","props","state","institution","majors","movieName","colleges","regions","urbanizations","selectedControl","selectedSize","selectedLevel","selectedDegUrban","selectedRegion","selectedTutionType","selectedLevelOfStudy","sortOrder","showTop10ByAcceptanceRate","bind","showTop10ByTutionCost","showTop10ByEarnings","showTop10ByJobs","handleRegionFilterChange","handleControlFilterChange","handleSizeFilterChange","handleLevelFilterChange","handleDegUrbanFilterChange","e","setState","target","value","console","log","componentDidMount","fetch","method","then","res","json","err","regionList","regionDivs","map","regionObj","i","region","urbanList","urbanDivs","urbanObj","degree_urbanization","collegeList","collegeDivs","college","InstitutionName","InstitutionID","location","url_school","year","acceptance_rate","render","Header"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../style/Top10Lists.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n//import PageNavbar from './PageNavbar';\r\nimport CollegeListRow from './CollegeListRow';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Media from 'react-bootstrap/Media'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Jumbotron from 'react-bootstrap/Jumbotron'\r\n\r\nexport default class Top10Lists extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// State maintained by this React component\r\n\t\tthis.state = {\r\n\t\t\t//variables here \r\n\t\t\tinstitution: 100654,\r\n\t\t\tmajors: [],\r\n\t\t\tmovieName: \"\",\r\n\t\t\tcolleges: [],\r\n\t\t\tregions: [],\r\n\t\t\turbanizations: [],\r\n\t\t\tselectedControl: \"NULL\",\r\n\t\t\tselectedSize: \"NULL\",\r\n\t\t\tselectedLevel: \"NULL\",\r\n\t\t\tselectedDegUrban: \"NULL\",\r\n\t\t\tselectedRegion: \"NULL\",\r\n\t\t\tselectedTutionType: \"In state\",\r\n\t\t\tselectedLevelOfStudy: \"Undergraduate\",\r\n\t\t\tsortOrder: \"DESC\"\r\n\t\t}\r\n\r\n\t\tthis.showTop10ByAcceptanceRate = this.showTop10ByAcceptanceRate.bind(this);\r\n\t\tthis.showTop10ByTutionCost = this.showTop10ByTutionCost.bind(this);\r\n\t\tthis.showTop10ByEarnings = this.showTop10ByEarnings.bind(this);\r\n\t\tthis.showTop10ByJobs = this.showTop10ByJobs.bind(this);\r\n\t\tthis.handleRegionFilterChange = this.handleRegionFilterChange.bind(this);\r\n\t\tthis.handleControlFilterChange = this.handleControlFilterChange.bind(this);\r\n\t\tthis.handleSizeFilterChange = this.handleSizeFilterChange.bind(this);\r\n\t\tthis.handleLevelFilterChange = this.handleLevelFilterChange.bind(this);\r\n\t\tthis.handleDegUrbanFilterChange = this.handleDegUrbanFilterChange.bind(this);\r\n\t}\r\n\r\n\t// handle change of region dropdown filter\r\n\thandleRegionFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedRegion: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\thandleDegUrbanFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedDegUrban: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\thandleControlFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedControl: e.target.value\r\n\t\t});\r\n\t\tconsole.log(\"selectedControl: \" + this.selectedControl);\r\n\t}\r\n\r\n\thandleSizeFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedSize: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\thandleLevelFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedLevel: e.target.value\r\n\t\t});\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Send an HTTP request to the server.\r\n\t\tfetch(\"http://localhost:8081/regions\",\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(regionList => {\r\n\t\t\t\tif (!regionList) return;\r\n\t\t\t\tconsole.log(regionList);\r\n\t\t\t\t// Map each decade in decadesList to an dropdown element:\r\n\t\t\t\tlet regionDivs = regionList.map((regionObj, i) =>\r\n\t\t\t\t\t<option key={i} value={regionObj.region}> {regionObj.region} </option>\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the decade list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tregions: regionDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\t// Send an HTTP request to the server.\r\n\t\tfetch(\"http://localhost:8081/urbanization\",\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(urbanList => {\r\n\t\t\t\tif (!urbanList) return;\r\n\t\t\t\tconsole.log(urbanList);\r\n\t\t\t\t// Map each decade in decadesList to an dropdown element:\r\n\t\t\t\tlet urbanDivs = urbanList.map((urbanObj, i) =>\r\n\t\t\t\t\t<option key={i} value={urbanObj.degree_urbanization}> {urbanObj.degree_urbanization} </option>\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the decade list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\turbanizations: urbanDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t}\r\n\r\n\tshowTop10ByTutionCost() {\r\n\t\t// Send an HTTP request to the server.\r\n\t\tfetch(`http://localhost:8081/top10/tution/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedLevel}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.sortOrder}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(collegeList => {\r\n\t\t\t\tif (!collegeList) return;\r\n\t\t\t\t// Map each attribute of a movie in this.state.movies to an HTML element\r\n\t\t\t\tlet collegeDivs = collegeList.map((college, i) =>\r\n\t\t\t\t\t<CollegeListRow name={college.InstitutionName} id={college.InstitutionID} location={college.location} url_school={college.url_school}\r\n\t\t\t\t\t\t\t\tdata_year={college.year} attribute1Label=\"Acceptance Rate\" attribute1Value={college.acceptance_rate} />\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the movies list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcolleges: collegeDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tshowTop10ByEarnings() {\r\n\t\t// Send an HTTP request to the server.\r\n\t\tfetch(`http://localhost:8081/top10/earning/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedLevel}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.sortOrder}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(collegeList => {\r\n\t\t\t\tif (!collegeList) return;\r\n\t\t\t\t// Map each attribute of a movie in this.state.movies to an HTML element\r\n\t\t\t\tlet collegeDivs = collegeList.map((college, i) =>\r\n\t\t\t\t\t<CollegeListRow name={college.InstitutionName} id={college.InstitutionID} location={college.location} url_school={college.url_school}\r\n\t\t\t\t\t\t\t\tdata_year={college.year} attribute1Label=\"Acceptance Rate\" attribute1Value={college.acceptance_rate} />\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the movies list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcolleges: collegeDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tshowTop10ByAcceptanceRate() {\r\n\t\t// Send an HTTP request to the server.\r\n\t\tfetch(`http://localhost:8081/top10/acceptance/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedLevel}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.sortOrder}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(collegeList => {\r\n\t\t\t\tif (!collegeList) return;\r\n\t\t\t\t// Map each attribute of a movie in this.state.movies to an HTML element\r\n\t\t\t\tlet collegeDivs = collegeList.map((college, i) =>\r\n\t\t\t\t\t<CollegeListRow name={college.InstitutionName} id={college.InstitutionID} location={college.location} url_school={college.url_school}\r\n\t\t\t\t\t\t\t\tdata_year={college.year} attribute1Label=\"Acceptance Rate\" attribute1Value={college.acceptance_rate} />\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the movies list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcolleges: collegeDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tshowTop10ByJobs() {\r\n\t\tconsole.log(\"Top 10 Jobs\");\r\n\t}\r\n\r\n\t//Need a render function. I'm copying sample method from HW2 if you need inspiration/structure\r\n\t// // {this.state.colleges}\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<div className=\"Top10Lists\">\r\n\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row><br></br></Row>\r\n\r\n\t\t\t\t\t<Row class=\"d-flex flex-wrap align-items-center\">\r\n\t\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t\t<Col xs={8}><Media>\r\n\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\twidth={119}\r\n\t\t\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\t\t\tclassName=\"mr-3\"\r\n\t\t\t\t\t\t\t\tsrc=\"LogosTop10.jpg\"\r\n\t\t\t\t\t\t\t\talt=\"Top 10 Colleges\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Media.Body>\r\n\t\t\t\t\t\t\t\t<h2>TOP 10 Colleges</h2>\r\n\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sed arcu non odio euismod lacinia at. Mauris sit amet massa vitae tortor condimentum. Nisi vitae suscipit tellus mauris a diam maecenas sed enim. Sed augue lacus viverra vitae congue eu consequat ac felis.\r\n    \t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t</Media.Body>\r\n\t\t\t\t\t\t</Media></Col>\r\n\t\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row><br></br></Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\r\n\t\t\t\t\t\t<Col > </Col>\r\n\t\t\t\t\t\t<Col xs={2}> <Button variant=\"outline-primary\" size=\"lg\" >\r\n\t\t\t\t\t\t\t<img class=\"option-btn-img\" src=\"./accepted.png\" alt=\"Top 10 Colleges by Acceptance Rate\" onClick={this.showTop10ByAcceptanceRate.bind()} />\r\n\t\t\t\t\t\t\t\tTop 10 Colleges by Acceptance Rate\r\n\t\t\t\t\t\t\t\t</Button>{' '}</Col>\r\n\t\t\t\t\t\t<Col xs={2}> <Button variant=\"outline-primary\" size=\"lg\" >\r\n\t\t\t\t\t\t\t<img class=\"option-btn-img\" src=\"./cost.png\" alt=\"Top 10 Colleges by Tution Fee\" onClick={this.showTop10ByTutionCost.bind()} />\r\n\t\t\t\t\t\t\tTution Fee\r\n\t\t\t\t\t\t\t\t</Button>{' '}</Col>\r\n\t\t\t\t\t\t<Col xs={2}> <Button variant=\"outline-primary\" size=\"lg\" >\r\n\t\t\t\t\t\t\t<img class=\"option-btn-img\" src=\"./salary.png\" alt=\"Top 10 Colleges by Earnings\" onClick={this.showTop10ByEarnings.bind()} />\r\n\t\t\t\t\t\t\tEarnings\r\n\t\t\t\t\t\t\t\t</Button>{' '}</Col>\r\n\t\t\t\t\t\t<Col xs={2}> <Button variant=\"outline-primary\" size=\"lg\" >\r\n\t\t\t\t\t\t\t<img class=\"option-btn-img\" src=\"./jobs.png\" alt=\"Top 10 Colleges by Job Specialization\" onClick={this.showTop10ByJobs.bind()} />\r\n\t\t\t\t\t\t\tTop 10 Colleges by Job Specialization\r\n\t\t\t\t\t\t\t\t</Button>{' '}</Col>\r\n\t\t\t\t\t\t<Col > </Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row><br></br></Row>\r\n\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t\t<Col xs={8}>\r\n\t\t\t\t\t\t\t<Accordion >\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t\t<Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t\t\tFILTER YOUR RESULTS\r\n    \t\t\t\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form noValidate>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"filterControl\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Control of Institution</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" multiple name=\"controlFilter\" value={this.state.selectedControl} onChange={this.handleControlFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Public\"> Public </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Private not-for-profit\"> Private not-for-profit </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Private for-profit\"> Private for-profit </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"filterSize\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Institution Size</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" multiple name=\"sizeFilter\" value={this.state.selectedSize} onChange={this.handleSizeFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Under 1,000\"> Under 1,000 </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"1,000–4,999\"> 1,000–4,999 </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"5,000–9,999\"> 5,000–9,999 </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"10,000–19,999\"> 10,000–19,999 </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"20,000 and above\"> 20,000 and above </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"filterLevel\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Institution Level</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" multiple name=\"controlSize\" value={this.state.selectedLevel} onChange={this.handleLevelFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Less than two years (below associate's)\"> Less than two years (below associate's) </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"At least two but less than four years\"> At least two but less than four years </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Four or more years\"> Four or more years </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"6\" controlId=\"filterRegion\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Region</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" multiple name=\"regionFilter\" value={this.state.selectedRegion} onChange={this.handleRegionFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.regions}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"6\" controlId=\"filterDegUrban\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Degree of Urbanization</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" multiple name=\"degUrbanFilter\" value={this.state.selectedDegUrban} onChange={this.handleDegUrbanFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.urbanizations}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"2\" controlId=\"filterDegUrban\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"submit\">Filter Results</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"1\" controlId=\"filterDegUrban\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button type=\"reset\">Clear</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t<Card> </Card>\r\n\t\t\t\t\t\t\t</Accordion>\r\n\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t<Row><br></br></Row>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t\t<Col xs={7}>{this.state.colleges}</Col>\r\n\t\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t</Container>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}