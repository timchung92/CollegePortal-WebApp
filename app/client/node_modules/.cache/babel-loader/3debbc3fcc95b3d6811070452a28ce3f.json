{"ast":null,"code":"var _jsxFileName = \"/home/student/Documents/team550_project/CollegeSearchPortal/app/client/src/components/Top10Lists.js\";\nimport React from 'react';\nimport '../style/Top10Lists.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport PageNavbar from './PageNavbar';\nimport CollegeListRow from './CollegeListRow';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Media from 'react-bootstrap/Media';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport Form from 'react-bootstrap/Form';\nexport default class Top10Lists extends React.Component {\n  constructor(props) {\n    super(props); // State maintained by this React component\n\n    this.state = {\n      //variables here \n      colleges: [],\n      regions: [],\n      degrees: [],\n      urbanizations: [],\n      occupations: [],\n      selectedControl: \"ALL\",\n      selectedSize: \"ALL\",\n      selectedDegUrban: \"ALL\",\n      selectedRegion: \"ALL\",\n      selectedTutionType: \"ALL\",\n      selectedLevelOfStudy: \"Undergraduate\",\n      selectedDegreeLevel: 'ALL',\n      sortOrder: \"DESC\"\n    };\n    this.showTop10ByAcceptanceRate = this.showTop10ByAcceptanceRate.bind(this);\n    this.showTop10ByTutionCost = this.showTop10ByTutionCost.bind(this);\n    this.showTop10ByEarnings = this.showTop10ByEarnings.bind(this);\n    this.showTop10ByJobs = this.showTop10ByJobs.bind(this);\n    this.handleRegionFilterChange = this.handleRegionFilterChange.bind(this);\n    this.handleControlFilterChange = this.handleControlFilterChange.bind(this);\n    this.handleSizeFilterChange = this.handleSizeFilterChange.bind(this);\n    this.handleLevelFilterChange = this.handleLevelFilterChange.bind(this);\n    this.handleDegUrbanFilterChange = this.handleDegUrbanFilterChange.bind(this);\n    this.handleTutionTypeFilterChange = this.handleTutionTypeFilterChange.bind(this);\n    this.handleSortOrderChange = this.handleSortOrderChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // handle change of Sorting order filter\n\n\n  handleSortOrderChange(e) {\n    this.setState({\n      sortOrder: e.target.value\n    }); //console.log(\"selectedRegion: \" + this.state.selectedRegion);\n  } // handle change of region dropdown filter\n\n\n  handleRegionFilterChange(e) {\n    this.setState({\n      selectedRegion: e.target.value\n    }); //console.log(\"selectedRegion: \" + this.state.selectedRegion);\n  } // handle change of tution type dropdown filter change\n\n\n  handleTutionTypeFilterChange(e) {\n    this.setState({\n      selectedTutionType: e.target.value\n    }); //console.log(\"selectedTutionType: \" + this.state.selectedTutionType);\n  }\n\n  handleDegUrbanFilterChange(e) {\n    this.setState({\n      selectedDegUrban: e.target.value\n    });\n    console.log(\"selectedDegUrban: \" + this.state.selectedDegUrban);\n  }\n\n  handleControlFilterChange(e) {\n    this.setState({\n      selectedControl: e.target.value //e.target.value\n\n    }); //console.log(this.selectedControl);\n\n    console.log(\"selectedControl: \" + this.state.selectedControl);\n  }\n\n  handleSizeFilterChange(e) {\n    this.setState({\n      selectedSize: e.target.value\n    }); //console.log(\"selectedSize: \" + this.state.selectedSize);\n  }\n\n  handleLevelFilterChange(e) {\n    var levelOfStudy = \"ALL\";\n    var input = e.target.value;\n    console.log(\"input: \" + input);\n\n    if (input.localeCompare(\"Associate's Degree\") == 0 || input.localeCompare(\"Bachelors Degree\") == 0 || input.localeCompare(\"Undergraduate Certificate or Diploma\") == 0 || input.localeCompare(\"First Professional Degree\") == 0) {\n      levelOfStudy = \"Undergraduate\";\n    } else if (input.localeCompare(\"Doctoral Degree\") == 0 || input.localeCompare(\"Graduate/Professional Certificate\") == 0 || input.localeCompare(\"Master's Degree\") == 0 || input.localeCompare(\"Post-baccalaureate Certificate\") == 0) {\n      levelOfStudy = \"Graduate\";\n    }\n\n    this.setState({\n      selectedDegreeLevel: e.target.value,\n      selectedLevelOfStudy: levelOfStudy\n    });\n    console.log(\"selectedDegreeLevel: \" + this.state.selectedDegreeLevel);\n    console.log(\"selectedLevelOfStudy: \" + this.state.selectedLevelOfStudy);\n  } // apply filter and show results \n\n\n  handleSubmit() {\n    console.log(\"Filters applied, last search :\" + this.state.currentSearch);\n\n    if (this.state.currentSearch.localeCompare(\"AcceptanceRate\") == 0) {\n      console.log(\"calling showTop10ByAcceptanceRate\"); //this.showTop10ByAcceptanceRate();\n      // this.showTop10ByAcceptanceRate.bind(this);\n\n      this.showTop10ByAcceptanceRate();\n    } else if (this.state.currentSearch.localeCompare(\"TutionCost\") == 0) {\n      console.log(\"calling showTop10ByTutionCost\");\n      this.showTop10ByTutionCost.bind(this);\n    } else if (this.state.currentSearch.localeCompare(\"Earnings\") == 0) {\n      console.log(\"calling showTop10ByEarnings\");\n      this.showTop10ByEarnings.bind(this);\n    } else if (this.state.currentSearch.localeCompare(\"Jobs\") == 0) {\n      console.log(\"calling showTop10ByJobs\");\n      this.showTop10ByJobs.bind(this);\n    } else {\n      this.componentDidMount();\n    }\n  }\n\n  componentDidMount() {\n    // Send an HTTP request to the server to get regions drop down values\n    fetch(\"http://localhost:8081/regions\", {\n      // The type of HTTP request.\n      method: 'GET'\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(regionList => {\n      if (!regionList) return;\n      console.log(regionList); // Map each decade in decadesList to an dropdown element:\n\n      let regionDivs = regionList.map((regionObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: regionObj.region,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }\n      }, \" \", regionObj.region, \" \")); // Set the state of the decade list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        regions: regionDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }); // Send an HTTP request to the server to get urbanization drop down values.\n\n    fetch(\"http://localhost:8081/urbanization\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(urbanList => {\n      if (!urbanList) return;\n      console.log(urbanList); // Map each decade in decadesList to an dropdown element:\n\n      let urbanDivs = urbanList.map((urbanObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: urbanObj.degree_urbanization,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 6\n        }\n      }, \" \", urbanObj.degree_urbanization, \" \")); // Set the state of the decade list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        urbanizations: urbanDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }); // Send an HTTP request to the server to get deglevel drop down values.\n\n    fetch(\"http://localhost:8081/deglevel\", {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(degreeList => {\n      if (!degreeList) return;\n      console.log(degreeList); // Map each decade in decadesList to an dropdown element:\n\n      let degDivs = degreeList.map((degObj, i) => /*#__PURE__*/React.createElement(\"option\", {\n        key: i,\n        value: degObj.description,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 5\n        }\n      }, \" \", degObj.description, \" \")); // Set the state of the decade list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        degrees: degDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showTop10ByTutionCost() {\n    var fetchURL = \"http://localhost:8081/top10/tution/\" + this.state.selectedControl + \"/\" + this.state.selectedSize + \"/\" + this.state.selectedRegion + \"/\" + this.state.selectedDegUrban + \"/\" + this.state.selectedTutionType + \"/\" + this.state.selectedLevelOfStudy + \"/\" + this.state.sortOrder;\n    console.log(fetchURL); //\t\tfetch(`http://localhost:8081/top10/tution/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedLevel}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.sortOrder}`,\n    // Send an HTTP request to the server.\n\n    fetch(fetchURL, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(collegeList => {\n      if (!collegeList) return; // Map each attribute of a college in this.state.colleges to an HTML element\n\n      let collegeDivs = collegeList.map((college, i) => /*#__PURE__*/React.createElement(CollegeListRow, {\n        name: college.InstitutionName,\n        id: college.InstitutionID,\n        location: college.location,\n        url_school: college.url_school,\n        data_year: college.year,\n        attribute1Label: college.attribute1_label,\n        attribute1Value: college.tuition_fee,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 6\n        }\n      })); // Set the state of the college list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        colleges: collegeDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showTop10ByEarnings() {\n    // Send an HTTP request to the server.\n    fetch(`http://localhost:8081/top10/earning/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.selectedDegreeLevel}/${this.state.sortOrder}`, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(collegeList => {\n      if (!collegeList) return; // Map each attribute of a movie in this.state.movies to an HTML element\n\n      let collegeDivs = collegeList.map((college, i) => /*#__PURE__*/React.createElement(CollegeListRow, {\n        name: college.InstitutionName,\n        id: college.InstitutionID,\n        location: college.location,\n        url_school: college.url_school,\n        data_year: college.year,\n        attribute1Label: \"Median Earning:\",\n        attribute1Value: college.earning_med,\n        attribute2Label: \"Major:\",\n        attribute2Value: college.Major,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 6\n        }\n      })); // Set the state of the movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        colleges: collegeDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showTop10ByAcceptanceRate() {\n    console.log(\"inside showTop10ByAcceptanceRate\");\n    console.log(\"selectedControl: \" + this.state.selectedControl);\n    console.log(\"selectedSize: \" + this.state.selectedSize);\n    console.log(\"selectedLevel: \" + this.state.selectedLevel);\n    console.log(\"selectedRegion: \" + this.state.selectedRegion);\n    console.log(\"selectedDegUrban: \" + this.state.selectedDegUrban);\n    console.log(\"sortOrder: \" + this.state.sortOrder);\n    var fetchURL = \"http://localhost:8081/top10/acceptance/\" + this.state.selectedControl + \"/\" + this.state.selectedSize + \"/\" + this.state.selectedRegion + \"/\" + this.state.selectedDegUrban + \"/\" + this.state.sortOrder;\n    console.log(fetchURL); // Send an HTTP request to the server.\n\n    fetch(fetchURL, {\n      method: 'GET' // The type of HTTP request.\n\n    }).then(res => {\n      // Convert the response data to a JSON.\n      return res.json();\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    }).then(collegeList => {\n      if (!collegeList) return; // Map each attribute of a movie in this.state.movies to an HTML element\n\n      let collegeDivs = collegeList.map((college, i) => /*#__PURE__*/React.createElement(CollegeListRow, {\n        name: college.InstitutionName,\n        id: college.InstitutionID,\n        location: college.location,\n        url_school: college.url_school,\n        data_year: college.year,\n        attribute1Label: \"Acceptance Rate\",\n        attribute1Value: college.acceptance_rate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 6\n        }\n      })); // Set the state of the movies list to the value returned by the HTTP response from the server.\n\n      this.setState({\n        colleges: collegeDivs\n      });\n    }, err => {\n      // Print the error if there is one.\n      console.log(err);\n    });\n  }\n\n  showTop10ByJobs() {\n    // set current search to \"Jobs\"\n    this.setState({\n      currentSearch: \"Jobs\"\n    });\n    console.log(this.state.currentSearch);\n  } //Need a render function. I'm copying sample method from HW2 if you need inspiration/structure\n  // // {this.state.colleges}\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      className: \"d-flex flex-wrap align-items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 6\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Media, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      width: 119,\n      height: 100,\n      className: \"mr-3\",\n      src: \"LogosTop10.jpg\",\n      alt: \"Top 10 Colleges\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Media.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 8\n      }\n    }, \"TOP 10 Colleges\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 8\n      }\n    }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sed arcu non odio euismod lacinia at. Mauris sit amet massa vitae tortor condimentum. Nisi vitae suscipit tellus mauris a diam maecenas sed enim. Sed augue lacus viverra vitae congue eu consequat ac felis.\")))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 6\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 6\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }\n    }, \"FILTER YOUR RESULTS\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }\n    }, \"Select one or more parameters to narrow down the results\"), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"filterControl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 12\n      }\n    }, \"Control of Institution\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      custom: true,\n      name: \"selectedControl\",\n      value: this.state.selectedControl,\n      onChange: this.handleControlFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ALL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Public\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 13\n      }\n    }, \" Public \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Private not-for-profit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }\n    }, \" Private not-for-profit \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Private for-profit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 13\n      }\n    }, \" Private for-profit \"))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"filterSize\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 12\n      }\n    }, \"Institution Size\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      custom: true,\n      lname: \"sizeFilter\",\n      value: this.state.selectedSize,\n      onChange: this.handleSizeFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ALL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 13\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Under 1,000\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 13\n      }\n    }, \" Under 1,000 \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1,000\\u20134,999\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 13\n      }\n    }, \" 1,000\\u20134,999 \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5,000\\u20139,999\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 13\n      }\n    }, \" 5,000\\u20139,999 \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10,000\\u201319,999\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 13\n      }\n    }, \" 10,000\\u201319,999 \"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"20,000 and above\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 13\n      }\n    }, \" 20,000 and above \"))), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"filterLevel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 12\n      }\n    }, \"Degree Level\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"degreeFilter\",\n      value: this.state.selectedDegreeLevel,\n      onChange: this.handleLevelFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ALL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 13\n      }\n    }, \"All\"), this.state.degrees))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"5\",\n      controlId: \"filterRegion\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 12\n      }\n    }, \"Region\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"regionFilter\",\n      value: this.state.selectedRegion,\n      onChange: this.handleRegionFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ALL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 13\n      }\n    }, \"All Regions\"), this.state.regions)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      controlId: \"filterDegUrban\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 12\n      }\n    }, \"Degree of Urbanization\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"degUrbanFilter\",\n      value: this.state.selectedDegUrban,\n      onChange: this.handleDegUrbanFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ALL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 13\n      }\n    }, \"All\"), this.state.urbanizations)), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"filterTuitionType\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 12\n      }\n    }, \"Tuition Type\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"tuitionTypeFilter\",\n      value: this.state.selectedTutionType,\n      onChange: this.handleTutionTypeFilterChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ALL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 13\n      }\n    }, \"All\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"In district\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 13\n      }\n    }, \"In district\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"In state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 13\n      }\n    }, \"In state\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Out of state\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }\n    }, \"Out of state\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"3\",\n      controlId: \"filterSortOrder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 12\n      }\n    }, \"Sort Results:\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      name: \"sortingFilter\",\n      value: this.state.sortOrder,\n      onChange: this.handleSortOrderChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"DESC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 13\n      }\n    }, \"High to Low\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"ASC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 13\n      }\n    }, \"Low to High\")))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.showTop10ByAcceptanceRate,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"option-btn-img\",\n      src: \"./accepted.png\",\n      alt: \"Top 10 Colleges by Acceptance Rate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 13\n      }\n    }), \"Acceptance\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.showTop10ByTutionCost.bind(),\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"option-btn-img\",\n      src: \"./cost.png\",\n      alt: \"Top 10 Colleges by Tuition Fee\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 13\n      }\n    }), \"Tuition Fee\")), /*#__PURE__*/React.createElement(Form.Group, {\n      as: Col,\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-primary\",\n      onClick: this.showTop10ByEarnings.bind(),\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"option-btn-img\",\n      src: \"./salary1.png\",\n      alt: \"Top 10 Colleges by Earnings\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }\n    }), \"Earnings\"))))))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 6\n      }\n    }, \" \")), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 6\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(Col, {\n      xs: 7,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 6\n      }\n    }, this.state.colleges), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 6\n      }\n    }, \" \")));\n  }\n\n}","map":{"version":3,"sources":["/home/student/Documents/team550_project/CollegeSearchPortal/app/client/src/components/Top10Lists.js"],"names":["React","PageNavbar","CollegeListRow","Container","Row","Media","Col","Button","Accordion","Card","Form","Top10Lists","Component","constructor","props","state","colleges","regions","degrees","urbanizations","occupations","selectedControl","selectedSize","selectedDegUrban","selectedRegion","selectedTutionType","selectedLevelOfStudy","selectedDegreeLevel","sortOrder","showTop10ByAcceptanceRate","bind","showTop10ByTutionCost","showTop10ByEarnings","showTop10ByJobs","handleRegionFilterChange","handleControlFilterChange","handleSizeFilterChange","handleLevelFilterChange","handleDegUrbanFilterChange","handleTutionTypeFilterChange","handleSortOrderChange","handleSubmit","e","setState","target","value","console","log","levelOfStudy","input","localeCompare","currentSearch","componentDidMount","fetch","method","then","res","json","err","regionList","regionDivs","map","regionObj","i","region","urbanList","urbanDivs","urbanObj","degree_urbanization","degreeList","degDivs","degObj","description","fetchURL","collegeList","collegeDivs","college","InstitutionName","InstitutionID","location","url_school","year","attribute1_label","tuition_fee","earning_med","Major","selectedLevel","acceptance_rate","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport '../style/Top10Lists.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport PageNavbar from './PageNavbar';\r\nimport CollegeListRow from './CollegeListRow';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Media from 'react-bootstrap/Media'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Form from 'react-bootstrap/Form'\r\n\r\nexport default class Top10Lists extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\t// State maintained by this React component\r\n\t\tthis.state = {\r\n\t\t\t//variables here \r\n\t\t\tcolleges: [],\r\n\t\t\tregions: [],\r\n\t\t\tdegrees: [],\r\n\t\t\turbanizations: [],\r\n\t\t\toccupations: [],\r\n\t\t\tselectedControl: \"ALL\",\r\n\t\t\tselectedSize: \"ALL\",\r\n\t\t\tselectedDegUrban: \"ALL\",\r\n\t\t\tselectedRegion: \"ALL\",\r\n\t\t\tselectedTutionType: \"ALL\",\r\n\t\t\tselectedLevelOfStudy: \"Undergraduate\",\r\n\t\t\tselectedDegreeLevel: 'ALL',\r\n\t\t\tsortOrder: \"DESC\"\r\n\t\t}\r\n\r\n\t\tthis.showTop10ByAcceptanceRate = this.showTop10ByAcceptanceRate.bind(this);\r\n\t\tthis.showTop10ByTutionCost = this.showTop10ByTutionCost.bind(this);\r\n\t\tthis.showTop10ByEarnings = this.showTop10ByEarnings.bind(this);\r\n\t\tthis.showTop10ByJobs = this.showTop10ByJobs.bind(this);\r\n\t\tthis.handleRegionFilterChange = this.handleRegionFilterChange.bind(this);\r\n\t\tthis.handleControlFilterChange = this.handleControlFilterChange.bind(this);\r\n\t\tthis.handleSizeFilterChange = this.handleSizeFilterChange.bind(this);\r\n\t\tthis.handleLevelFilterChange = this.handleLevelFilterChange.bind(this);\r\n\t\tthis.handleDegUrbanFilterChange = this.handleDegUrbanFilterChange.bind(this);\r\n\t\tthis.handleTutionTypeFilterChange = this.handleTutionTypeFilterChange.bind(this);\r\n\t\tthis.handleSortOrderChange = this.handleSortOrderChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\r\n\t// handle change of Sorting order filter\r\n\thandleSortOrderChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tsortOrder: e.target.value\r\n\t\t});\r\n\t\t//console.log(\"selectedRegion: \" + this.state.selectedRegion);\r\n\t}\r\n\r\n\t// handle change of region dropdown filter\r\n\thandleRegionFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedRegion: e.target.value\r\n\t\t});\r\n\t\t//console.log(\"selectedRegion: \" + this.state.selectedRegion);\r\n\t}\r\n\r\n\t// handle change of tution type dropdown filter change\r\n\thandleTutionTypeFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedTutionType: e.target.value\r\n\t\t});\r\n\t\t//console.log(\"selectedTutionType: \" + this.state.selectedTutionType);\r\n\t}\r\n\r\n\thandleDegUrbanFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedDegUrban: e.target.value\r\n\t\t});\r\n\t\tconsole.log(\"selectedDegUrban: \" + this.state.selectedDegUrban);\r\n\t}\r\n\r\n\thandleControlFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedControl: e.target.value\r\n\t\t\t//e.target.value\r\n\t\t});\r\n\t\t//console.log(this.selectedControl);\r\n\t\tconsole.log(\"selectedControl: \" + this.state.selectedControl);\r\n\t}\r\n\r\n\thandleSizeFilterChange(e) {\r\n\t\tthis.setState({\r\n\t\t\tselectedSize: e.target.value\r\n\t\t});\r\n\t\t//console.log(\"selectedSize: \" + this.state.selectedSize);\r\n\t}\r\n\r\n\thandleLevelFilterChange(e) {\r\n\r\n\t\tvar levelOfStudy = \"ALL\";\r\n\t\tvar input = e.target.value;\r\n\t\tconsole.log(\"input: \" + input);\r\n\r\n\t\tif((input.localeCompare(\"Associate's Degree\") == 0) || (input.localeCompare(\"Bachelors Degree\") == 0) || (input.localeCompare(\"Undergraduate Certificate or Diploma\") == 0) || (input.localeCompare(\"First Professional Degree\") == 0) ) {\r\n\t\t\tlevelOfStudy = \"Undergraduate\";\r\n\t\t} else if((input.localeCompare(\"Doctoral Degree\") == 0) || (input.localeCompare(\"Graduate/Professional Certificate\") == 0) || (input.localeCompare(\"Master's Degree\") == 0) || (input.localeCompare(\"Post-baccalaureate Certificate\") == 0) ) {\r\n\t\t\tlevelOfStudy = \"Graduate\";\r\n\t\t} \r\n\r\n\t\tthis.setState({\r\n\t\t\tselectedDegreeLevel: e.target.value,\r\n\t\t\tselectedLevelOfStudy: levelOfStudy\r\n\t\t});\r\n\r\n\t\tconsole.log(\"selectedDegreeLevel: \" + this.state.selectedDegreeLevel);\r\n\t\tconsole.log(\"selectedLevelOfStudy: \" + this.state.selectedLevelOfStudy);\r\n\t}\r\n\r\n\t// apply filter and show results \r\n\thandleSubmit() {\r\n\r\n\t\tconsole.log(\"Filters applied, last search :\" + this.state.currentSearch);\r\n\r\n\t\tif (this.state.currentSearch.localeCompare(\"AcceptanceRate\") == 0) {\r\n\t\t\tconsole.log(\"calling showTop10ByAcceptanceRate\");\r\n\t\t\t//this.showTop10ByAcceptanceRate();\r\n\t\t\t// this.showTop10ByAcceptanceRate.bind(this);\r\n\t\t\tthis.showTop10ByAcceptanceRate();\r\n\t\t} else if (this.state.currentSearch.localeCompare(\"TutionCost\") == 0) {\r\n\t\t\tconsole.log(\"calling showTop10ByTutionCost\");\r\n\t\t\tthis.showTop10ByTutionCost.bind(this);\r\n\t\t} else if (this.state.currentSearch.localeCompare(\"Earnings\") == 0) {\r\n\t\t\tconsole.log(\"calling showTop10ByEarnings\");\r\n\t\t\tthis.showTop10ByEarnings.bind(this);\r\n\t\t} else if (this.state.currentSearch.localeCompare(\"Jobs\") == 0) {\r\n\t\t\tconsole.log(\"calling showTop10ByJobs\");\r\n\t\t\tthis.showTop10ByJobs.bind(this);\r\n\t\t} else {\r\n\t\t\tthis.componentDidMount();\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t// Send an HTTP request to the server to get regions drop down values\r\n\t\tfetch(\"http://localhost:8081/regions\",\r\n\t\t\t{\t// The type of HTTP request.\r\n\t\t\t\tmethod: 'GET'\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(regionList => {\r\n\t\t\t\tif (!regionList) return;\r\n\t\t\t\tconsole.log(regionList);\r\n\t\t\t\t// Map each decade in decadesList to an dropdown element:\r\n\t\t\t\tlet regionDivs = regionList.map((regionObj, i) =>\r\n\t\t\t\t\t<option key={i} value={regionObj.region}> {regionObj.region} </option>\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the decade list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tregions: regionDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\t// Send an HTTP request to the server to get urbanization drop down values.\r\n\t\tfetch(\"http://localhost:8081/urbanization\",\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(urbanList => {\r\n\t\t\t\tif (!urbanList) return;\r\n\t\t\t\tconsole.log(urbanList);\r\n\t\t\t\t// Map each decade in decadesList to an dropdown element:\r\n\t\t\t\tlet urbanDivs = urbanList.map((urbanObj, i) =>\r\n\t\t\t\t\t<option key={i} value={urbanObj.degree_urbanization}> {urbanObj.degree_urbanization} </option>\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the decade list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\turbanizations: urbanDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\r\n\t\t\t// Send an HTTP request to the server to get deglevel drop down values.\r\n\t\tfetch(\"http://localhost:8081/deglevel\",\r\n\t\t{\r\n\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t}).then(res => {\r\n\t\t\t// Convert the response data to a JSON.\r\n\t\t\treturn res.json();\r\n\t\t}, err => {\r\n\t\t\t// Print the error if there is one.\r\n\t\t\tconsole.log(err);\r\n\t\t}).then(degreeList => {\r\n\t\t\tif (!degreeList) return;\r\n\t\t\tconsole.log(degreeList);\r\n\t\t\t// Map each decade in decadesList to an dropdown element:\r\n\t\t\tlet degDivs = degreeList.map((degObj, i) =>\r\n\t\t\t\t<option key={i} value={degObj.description}> {degObj.description} </option>\r\n\t\t\t);\r\n\r\n\t\t\t// Set the state of the decade list to the value returned by the HTTP response from the server.\r\n\t\t\tthis.setState({\r\n\t\t\t\tdegrees: degDivs\r\n\t\t\t});\r\n\t\t}, err => {\r\n\t\t\t// Print the error if there is one.\r\n\t\t\tconsole.log(err);\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tshowTop10ByTutionCost() {\r\n\r\n\t\tvar fetchURL = \"http://localhost:8081/top10/tution/\" + this.state.selectedControl + \"/\" + this.state.selectedSize + \"/\" + this.state.selectedRegion +\r\n\t\t\t\t\t\"/\" + this.state.selectedDegUrban + \"/\" + this.state.selectedTutionType + \"/\" + this.state.selectedLevelOfStudy + \"/\" + this.state.sortOrder;\r\n\t\tconsole.log(fetchURL);\r\n\r\n\t\t//\t\tfetch(`http://localhost:8081/top10/tution/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedLevel}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.sortOrder}`,\r\n\r\n\t\t// Send an HTTP request to the server.\r\n\t\tfetch(fetchURL,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(collegeList => {\r\n\t\t\t\tif (!collegeList) return;\r\n\t\t\t\t// Map each attribute of a college in this.state.colleges to an HTML element\r\n\t\t\t\tlet collegeDivs = collegeList.map((college, i) =>\r\n\t\t\t\t\t<CollegeListRow name={college.InstitutionName} id={college.InstitutionID} location={college.location} url_school={college.url_school}\r\n\t\t\t\t\t\tdata_year={college.year} attribute1Label={college.attribute1_label} attribute1Value={college.tuition_fee} />\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the college list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcolleges: collegeDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tshowTop10ByEarnings() {\r\n\r\n\t\t// Send an HTTP request to the server.\r\n\t\tfetch(`http://localhost:8081/top10/earning/${this.state.selectedControl}/${this.state.selectedSize}/${this.state.selectedRegion}/${this.state.selectedDegUrban}/${this.state.selectedDegreeLevel}/${this.state.sortOrder}`,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(collegeList => {\r\n\t\t\t\tif (!collegeList) return;\r\n\t\t\t\t// Map each attribute of a movie in this.state.movies to an HTML element\r\n\t\t\t\tlet collegeDivs = collegeList.map((college, i) =>\r\n\t\t\t\t\t<CollegeListRow name={college.InstitutionName} id={college.InstitutionID} location={college.location} url_school={college.url_school}\r\n\t\t\t\t\t\tdata_year={college.year} attribute1Label=\"Median Earning:\" attribute1Value={college.earning_med}\r\n\t\t\t\t\t\tattribute2Label=\"Major:\" attribute2Value={college.Major} />\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the movies list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcolleges: collegeDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tshowTop10ByAcceptanceRate() {\r\n\r\n\t\tconsole.log(\"inside showTop10ByAcceptanceRate\");\r\n\t\tconsole.log(\"selectedControl: \" + this.state.selectedControl);\r\n\t\tconsole.log(\"selectedSize: \" + this.state.selectedSize);\r\n\t\tconsole.log(\"selectedLevel: \" + this.state.selectedLevel);\r\n\t\tconsole.log(\"selectedRegion: \" + this.state.selectedRegion);\r\n\t\tconsole.log(\"selectedDegUrban: \" + this.state.selectedDegUrban);\r\n\t\tconsole.log(\"sortOrder: \" + this.state.sortOrder);\r\n\r\n\t\tvar fetchURL = \"http://localhost:8081/top10/acceptance/\" + this.state.selectedControl + \"/\" + this.state.selectedSize + \"/\" + this.state.selectedRegion + \"/\" + this.state.selectedDegUrban + \"/\" + this.state.sortOrder;\r\n\t\tconsole.log(fetchURL);\r\n\r\n\t\t// Send an HTTP request to the server.\r\n\t\tfetch(fetchURL,\r\n\t\t\t{\r\n\t\t\t\tmethod: 'GET' // The type of HTTP request.\r\n\t\t\t}).then(res => {\r\n\t\t\t\t// Convert the response data to a JSON.\r\n\t\t\t\treturn res.json();\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t}).then(collegeList => {\r\n\t\t\t\tif (!collegeList) return;\r\n\t\t\t\t// Map each attribute of a movie in this.state.movies to an HTML element\r\n\t\t\t\tlet collegeDivs = collegeList.map((college, i) =>\r\n\t\t\t\t\t<CollegeListRow name={college.InstitutionName} id={college.InstitutionID} location={college.location} url_school={college.url_school}\r\n\t\t\t\t\t\tdata_year={college.year} attribute1Label=\"Acceptance Rate\" attribute1Value={college.acceptance_rate} />\r\n\t\t\t\t);\r\n\r\n\t\t\t\t// Set the state of the movies list to the value returned by the HTTP response from the server.\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcolleges: collegeDivs\r\n\t\t\t\t});\r\n\t\t\t}, err => {\r\n\t\t\t\t// Print the error if there is one.\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t}\r\n\r\n\tshowTop10ByJobs() {\r\n\t\t// set current search to \"Jobs\"\r\n\t\tthis.setState({\r\n\t\t\tcurrentSearch: \"Jobs\"\r\n\t\t});\r\n\r\n\t\tconsole.log(this.state.currentSearch);\r\n\t}\r\n\r\n\t//Need a render function. I'm copying sample method from HW2 if you need inspiration/structure\r\n\t// // {this.state.colleges}\r\n\trender() {\r\n\r\n\t\treturn (\r\n\r\n\t\t\t<Container fluid>\r\n\t\t\t\t<Row><br></br></Row>\r\n\r\n\t\t\t\t<Row className=\"d-flex flex-wrap align-items-center\">\r\n\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t<Col xs={8}><Media>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\twidth={119}\r\n\t\t\t\t\t\t\theight={100}\r\n\t\t\t\t\t\t\tclassName=\"mr-3\"\r\n\t\t\t\t\t\t\tsrc=\"LogosTop10.jpg\"\r\n\t\t\t\t\t\t\talt=\"Top 10 Colleges\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Media.Body>\r\n\t\t\t\t\t\t\t<h2>TOP 10 Colleges</h2>\r\n\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Sed arcu non odio euismod lacinia at. Mauris sit amet massa vitae tortor condimentum. Nisi vitae suscipit tellus mauris a diam maecenas sed enim. Sed augue lacus viverra vitae congue eu consequat ac felis.\r\n    \t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t</Media.Body>\r\n\t\t\t\t\t</Media></Col>\r\n\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Row><br></br></Row>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t<Col xs={8}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<Card.Body>\r\n\t\t\t\t\t\t\t\t<Card.Title>FILTER YOUR RESULTS</Card.Title>\r\n\t\t\t\t\t\t\t\t<Card.Subtitle className=\"mb-2 text-muted\">Select one or more parameters to narrow down the results</Card.Subtitle>\r\n\t\t\t\t\t\t\t\t<Card.Text> </Card.Text>\r\n\t\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"filterControl\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Control of Institution</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" custom name=\"selectedControl\" value={this.state.selectedControl} onChange={this.handleControlFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ALL\">All</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Public\"> Public </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Private not-for-profit\"> Private not-for-profit </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Private for-profit\"> Private for-profit </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"filterSize\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Institution Size</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" custom lname=\"sizeFilter\" value={this.state.selectedSize} onChange={this.handleSizeFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ALL\">All</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Under 1,000\"> Under 1,000 </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"1,000–4,999\"> 1,000–4,999 </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"5,000–9,999\"> 5,000–9,999 </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"10,000–19,999\"> 10,000–19,999 </option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"20,000 and above\"> 20,000 and above </option>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"filterLevel\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Degree Level</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"degreeFilter\" value={this.state.selectedDegreeLevel} onChange={this.handleLevelFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ALL\">All</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.degrees}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"5\" controlId=\"filterRegion\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Region</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"regionFilter\" value={this.state.selectedRegion} onChange={this.handleRegionFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ALL\">All Regions</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.regions}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\" controlId=\"filterDegUrban\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Degree of Urbanization</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"degUrbanFilter\" value={this.state.selectedDegUrban} onChange={this.handleDegUrbanFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ALL\">All</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state.urbanizations}\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"3\" controlId=\"filterTuitionType\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Tuition Type</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"tuitionTypeFilter\" value={this.state.selectedTutionType} onChange={this.handleTutionTypeFilterChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ALL\">All</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"In district\">In district</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"In state\">In state</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"Out of state\">Out of state</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"3\" controlId=\"filterSortOrder\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Label>Sort Results:</Form.Label>\r\n\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" name=\"sortingFilter\" value={this.state.sortOrder} onChange={this.handleSortOrderChange}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"DESC\">High to Low</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"ASC\">Low to High</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\" >\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={this.showTop10ByAcceptanceRate} size=\"lg\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"option-btn-img\" src=\"./accepted.png\" alt=\"Top 10 Colleges by Acceptance Rate\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\tAcceptance\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={this.showTop10ByTutionCost.bind()} size=\"lg\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"option-btn-img\" src=\"./cost.png\" alt=\"Top 10 Colleges by Tuition Fee\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\tTuition Fee\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Group as={Col} md=\"4\">\r\n\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"outline-primary\" onClick={this.showTop10ByEarnings.bind()} size=\"lg\" >\r\n\t\t\t\t\t\t\t\t\t\t\t\t<img className=\"option-btn-img\" src=\"./salary1.png\" alt=\"Top 10 Colleges by Earnings\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\tEarnings\r\n\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t\r\n\t\t\t\t<Row><br></br></Row>\r\n\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t\t<Col xs={7}>{this.state.colleges}</Col>\r\n\t\t\t\t\t<Col> </Col>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t</Container>\r\n\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}